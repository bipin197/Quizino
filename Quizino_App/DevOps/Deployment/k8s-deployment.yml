apiVersion: apps/v1
kind: Deployment
metadata:
  name: quizapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quizapi
  template:
    metadata:
      labels:
        app: quizapi
    spec:
      containers:
      - name: quizapi
        image: quizapi:latest # Use ECR URL in production
        ports:
        - containerPort: 8081

---
apiVersion: v1
kind: Service
metadata:
  name: quizapi
spec:
  type: NodePort
  ports:
  - port: 8081
    targetPort: 8081
    nodePort: 30082
  selector:
    app: quizapi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: questionapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: questionapi
  template:
    metadata:
      labels:
        app: questionapi
    spec:
      containers:
      - name: questionapi
        image: questionapi:latest # Use ECR URL in production
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: questionapi
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30081
  selector:
    app: questionapi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: questionmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: questionmanager
  template:
    metadata:
      labels:
        app: questionmanager
    spec:
      containers:
      - name: questionmanager
        image: questionmanager:latest # Use ECR URL in production
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: questionmanager
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30420
  selector:
    app: questionmanager

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres1
  template:
    metadata:
      labels:
        app: postgres1
    spec:
      containers:
      - name: postgres
        image: postgres:13
        env:
        - name: POSTGRES_USER
          value: qs_user
        - name: POSTGRES_PASSWORD
          value: qs_user
        - name: POSTGRES_DB
          value: qs_db
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: qs-init
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: qs-init
        hostPath:
          path: ./qs-init
          type: Directory

---
apiVersion: v1
kind: Service
metadata:
  name: postgres1
spec:
  type: NodePort
  ports:
  - port: 5432
    targetPort: 5432
    nodePort: 30432
  selector:
    app: postgres1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres2
  template:
    metadata:
      labels:
        app: postgres2
    spec:
      containers:
      - name: postgres
        image: postgres:13
        env:
        - name: POSTGRES_USER
          value: qz_user
        - name: POSTGRES_PASSWORD
          value: qz_user
        - name: POSTGRES_DB
          value: qz_db
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: qz-init
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: qz-init
        hostPath:
          path: ./qz-init
          type: Directory

---
apiVersion: v1
kind: Service
metadata:
  name: postgres2
spec:
  type: NodePort
  ports:
  - port: 5432
    targetPort: 5432
    nodePort: 30433
  selector:
    app: postgres2